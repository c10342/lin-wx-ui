import{isImageFile,chooseFile,isVideo,isPromise}from"./utils";import{chooseImageProps,chooseVideoProps}from"./props";import{canIUsePreviewMedia}from"../common/version";Component({options:{addGlobalClass:!0,multipleSlots:!0},externalClasses:["custom-class","preview-class","preview-image-class","preview-file-class","delete-class","mask-class","upload-class"],properties:{name:String,disabled:Boolean,uploadText:String,useBeforeRead:Boolean,beforeRead:null,afterRead:null,accept:{type:String,value:"image",options:["all","media","image","file","video"]},multiple:Boolean,maxCount:{type:Number,value:100},fileList:{type:Array,value:[],observer:"formatFileList"},maxSize:{type:Number,value:Number.MAX_VALUE},previewImage:{type:Boolean,value:!0},imageFit:{type:String,value:"scaleToFill"},previewSize:{type:[String,Number],value:"160rpx"},previewFullImage:{type:Boolean,value:!0},deletable:{type:Boolean,value:!0},uploadIcon:{type:String,value:"camera"},showUpload:{type:Boolean,value:!0},...chooseVideoProps,...chooseImageProps},data:{lists:[],showUploadBtn:!0},methods:{startUpload(){const{maxCount:e,multiple:t,accept:i,lists:a,disabled:s}=this.properties;s||chooseFile({...this.properties,maxCount:e-a.length}).then(e=>{let a=null;a=isVideo(e,i)?{path:e.tempFilePath,...e}:t?e.tempFiles:e.tempFiles[0],this.onBeforeRead(a)}).catch(e=>{this.triggerEvent("error",e)})},onBeforeRead(e){const{beforeRead:t,useBeforeRead:i}=this.properties;let a=!0;"function"==typeof t&&(a=t(e,this.getDetail())),i&&(a=new Promise((t,i)=>{this.triggerEvent("before-read",{file:e,...this.getDetail(),callback:e=>{e?t():i()}})})),a&&(isPromise(a)?a.then(t=>this.onAfterRead(t||e)).catch(()=>{}):this.onAfterRead(e))},onAfterRead(e){const{maxSize:t,afterRead:i}=this.properties;(Array.isArray(e)?e.some(e=>e.size>t):e.size>t)?this.triggerEvent("oversize",{file:e,...this.getDetail()}):("function"==typeof i&&i(e,this.getDetail()),this.triggerEvent("after-read",{file:e,...this.getDetail()}))},onPreviewImage(e){const{previewFullImage:t}=this.properties;if(!t)return;const{index:i}=e.currentTarget.dataset,{lists:a}=this.data,s=a[i];wx.previewImage({urls:a.filter(e=>e.isImage).map(e=>e.url||e.path),current:s.url||s.path,fail(){wx.showToast({title:"预览图片失败",icon:"none"})}})},onPreviewVideo(e){const{previewFullImage:t}=this.properties;if(!t)return;if(!canIUsePreviewMedia())return void wx.showToast({title:"微信版本过低，无法全屏预览视频",icon:"none"});const{index:i}=e.currentTarget.dataset,{lists:a}=this.data;wx.previewMedia({sources:a.filter(e=>e.isVideo).map(e=>(e.type="video",e.url=e.url||e.path,e)),current:i,fail(){wx.showToast({title:"预览视频失败",icon:"none"})}})},deleteItem(e){const{index:t}=e.currentTarget.dataset;this.triggerEvent("delete",{...this.getDetail(t),file:this.data.fileList[t]})},onClickPreview(e){const{index:t}=e.currentTarget.dataset,i=this.data.lists[t];this.triggerEvent("click-preview",{...i,...this.getDetail(t)})},getDetail(e){return{name:this.properties.name,index:null==e?this.data.fileList.length:e}},formatFileList(){const{fileList:e=[],maxCount:t}=this.properties,i=e.map(e=>{const t="isImage"in e?e.isImage:isImageFile(e),i=!("deletable"in e)||e.deletable;return{...e,isImage:t,deletable:i}});this.setData({lists:i,showUploadBtn:i.length<t})}},created:function(){},attached:function(){},ready:function(){},moved:function(){},detached:function(){}});
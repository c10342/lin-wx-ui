import{isSameSecond,parseFormat,parseTimeDate}from"./utils";Component({options:{addGlobalClass:!0,multipleSlots:!0},externalClasses:["custom-class"],properties:{time:{type:Number,observer:"updateTime"},format:{type:String,value:"HH:mm:ss"},autoStart:{type:Boolean,value:!0},millisecond:Boolean,useSlot:Boolean},data:{formattedTime:"0"},methods:{updateTime(){this.pause();const{time:e,autoStart:t,format:i}=this.properties;this.mainTime=e,this.setData({formattedTime:parseFormat(i,parseTimeDate(e))}),t&&this.start()},pause(){this.timer&&(clearTimeout(this.timer),this.timer=null),this.counting=!1},start(){this.counting||(this.counting=!0,this.endTime=Date.now()+this.mainTime,this.renderTime())},reset(){this.updateTime()},renderTime(){this.properties.millisecond?this.renderTimeByMill():this.renderTimeBySecond()},renderTimeBySecond(){this.timer=setTimeout(()=>{const e=this.getCurrentTime();isSameSecond(e,this.mainTime)&&0!==e||this.setCurrentTime(e),0!==this.mainTime&&this.renderTimeBySecond()},1e3)},renderTimeByMill(){this.timer=setTimeout(()=>{this.setCurrentTime(this.getCurrentTime()),0!==this.mainTime&&this.renderTimeByMill()},30)},getCurrentTime(){return Math.max(this.endTime-Date.now(),0)},setCurrentTime(e){this.mainTime=e;const t=parseTimeDate(e),{format:i}=this.properties;this.triggerEvent("change",t),this.setData({formattedTime:parseFormat(i,t)}),0===e&&(this.pause(),this.triggerEvent("finish"))}},created:function(){this.timer=null,this.mainTime=0,this.counting=!1,this.endTime=null},attached:function(){},ready:function(){},moved:function(){},detached:function(){this.timer&&(clearTimeout(this.timer),this.timer=null)}});
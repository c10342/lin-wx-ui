import{isObj}from"../common/utils";const nextTick=()=>new Promise(e=>setTimeout(e,1e3/30)),getClassName=e=>({enter:`lin-${e}-enter lin-${e}-enter-active enter-class enter-active-class`,"enter-to":`lin-${e}-enter-to lin-${e}-enter-active enter-to-class enter-active-class`,leave:`lin-${e}-leave lin-${e}-leave-active leave-class leave-active-class`,"leave-to":`lin-${e}-leave-to lin-${e}-leave-active leave-to-class leave-active-class`});export const transition=e=>Behavior({properties:{customStyle:String,show:{type:Boolean,value:e,observer:"observeShow"},duration:{type:null,value:300,observer:"observeDuration"},name:{type:String,value:"fade"}},data:{type:"",inited:!1,display:!1,classes:"",currentDuration:0},attached(){this.properties.show&&this.enter()},methods:{observeShow(e,t){e!==t&&(e?this.enter():this.leave())},enter(){const{duration:e,name:t}=this.properties,s=getClassName(t),a=isObj(e)?e.enter:e;this.status="enter",this.triggerEvent("before-enter"),Promise.resolve().then(()=>{this.checkStatus("enter"),this.triggerEvent("enter"),this.setData({inited:!0,display:!0,classes:s.enter,currentDuration:a})}).then(nextTick).then(()=>{this.checkStatus("enter"),this.transitionEnded=!1,setTimeout(()=>this.onTransitionEnd(),a),this.setData({classes:s["enter-to"]})}).catch(()=>{})},leave(){if(!this.data.display)return;const{duration:e,name:t}=this.data,s=getClassName(t),a=isObj(e)?e.leave:e;this.status="leave",this.triggerEvent("before-leave"),Promise.resolve().then(()=>{this.checkStatus("leave"),this.triggerEvent("leave"),this.setData({classes:s.leave,currentDuration:a})}).then(nextTick).then(()=>{this.checkStatus("leave"),this.transitionEnded=!1,setTimeout(()=>this.onTransitionEnd(),a),this.setData({classes:s["leave-to"]})}).catch(()=>{})},checkStatus(e){if(e!==this.status)throw new Error("incongruent status: "+e)},onTransitionEnd(){if(this.transitionEnded)return;this.transitionEnded=!0,this.triggerEvent("after-"+this.status);const{show:e,display:t}=this.data;!e&&t&&this.setData({display:!1})}}});
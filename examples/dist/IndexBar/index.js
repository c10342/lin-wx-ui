import{pageScrollBehaviors}from"../behaviors/page-scroll";Component({options:{addGlobalClass:!0,multipleSlots:!0},relations:{"../IndexAnchor/index":{type:"descendant",linked(e){this.children=this.children||[],this.children.push(e),this.updateDataFromChildren()},unlinked(e){this.children=(this.children||[]).filter(t=>t!==e),this.updateDataFromChildren()}}},behaviors:[pageScrollBehaviors((function(e){this.onScroll(e)}))],externalClasses:["custom-class","sidebar-class","sidebar-item-class"],properties:{zIndex:{type:Number,value:1,observer:"updateChildren"},sticky:{type:Boolean,value:!0,observer:"updateChildren"},stickyOffsetTop:{type:Number,value:0,observer:"updateChildren"},highlightColor:{type:String,observer:"updateChildren"}},data:{barList:[],activeIndex:-1},methods:{updateDataFromChildren(){const e=[];(this.children||[]).forEach(t=>{e.push(t.properties.index)}),this.setData({barList:e})},updateChildren(){(this.children||[]).forEach(e=>{e.updateDataFromParent()})},onScroll(e){(this.children||[]).forEach(t=>{t.onScroll(e)});const t=(this.children||[]).find(e=>e.data.isActive);let i=-1;t&&(i=t.properties.index),i!==this.data.activeIndex&&this.setData({activeIndex:i})},onSidebarClick(e){const{index:t}=e.currentTarget.dataset;this.triggerEvent("select",t);const i=(this.children||[]).find(e=>t===e.properties.index);i&&Promise.all([this.getViewPort(),i.getContainerRect()]).then(e=>{const t=e[0].scrollTop+e[1].top;wx.pageScrollTo({scrollTop:t,duration:300})})},getViewPort(){return new Promise(e=>{wx.createSelectorQuery().in(this).selectViewport().scrollOffset(e).exec()})}},created:function(){},attached:function(){},ready:function(){},moved:function(){},detached:function(){}});
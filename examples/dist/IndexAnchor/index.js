Component({options:{addGlobalClass:!0,multipleSlots:!0},relations:{"../IndexBar/index":{type:"ancestor",linked(t){this.parent=t,this.updateDataFromParent()},unlinked(){this.parent=null}}},externalClasses:["custom-class","index-class"],properties:{index:{type:[String,Number]},useSlot:Boolean},data:{zIndex:1,sticky:!0,stickyOffsetTop:0,highlightColor:"",fixed:!1,transform:0,indexwapperHeight:"",isActive:!1},methods:{updateDataFromParent(){if(this.parent){const{zIndex:t,sticky:e,stickyOffsetTop:i,highlightColor:n}=this.parent.properties;this.setData({zIndex:t,sticky:e,stickyOffsetTop:i,highlightColor:n})}},onScroll(t={}){this.getRect().then(t=>{const{stickyOffsetTop:e,sticky:i}=this.data,n=t[0],s=t[1];let o={};i&&(o=n.top>e?{fixed:!1,transform:0,indexwapperHeight:""}:n.top<=e&&n.height-e+n.top>s.height?{fixed:!0,transform:0,indexwapperHeight:s.height}:{fixed:!1,transform:n.height-s.height,indexwapperHeight:s.height});const a=i?e:0;n.top>a?o.isActive=!1:n.height-a+n.top>s.height||n.height-a+n.top>0?o.isActive=!0:o.isActive=!1,this.setDiffData(o)})},setDiffData(t){const e=Object.keys(t).reduce((e,i)=>(t[i]!==this.data[i]&&(e[i]=t[i]),e),{});this.setData(e)},getRect(){return Promise.all([this.getContainerRect(),this.getIndexRect()])},getIndexRect(){return new Promise(t=>{this.createSelectorQuery().select(".lin-index-anchor-index").boundingClientRect(t).exec()})},getContainerRect(){return new Promise(t=>{this.createSelectorQuery().select(".lin-index-anchor").boundingClientRect(t).exec()})}},created:function(){},attached:function(){},ready:function(){this.onScroll()},moved:function(){},detached:function(){}});